<div class="bg-light border col-6 py-2" @onclick="(args) => SelectedProductUpdated(args, Product.Name)">
    <h4 class="text-secondary">Product @Product.Id</h4>

    <input type="checkbox" @onchange="FavouriteUpdated" /> Add to Favourites  <!-- This should update the favourite count in the parent component. -->
    <br /><br />

    Name - @Product.Name
    <br />
    Show Properties: <input type="checkbox" @bind="Product.IsActive" />
    <br />
    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_DeleteButtonComponent ProductId="@Product.Id" ProductName="@Product.Name" />
</div>

@code {
    [Parameter]
    public required Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavouriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnSelectedProductChange { get; set; }

    // Event callback function
    private async Task FavouriteUpdated(ChangeEventArgs args)
    {
        await OnFavouriteUpdated.InvokeAsync((bool)(args.Value ?? false));
    }

    private async Task SelectedProductUpdated(MouseEventArgs args, string productName)
    {
        await OnSelectedProductChange.InvokeAsync(productName);
    }
}
