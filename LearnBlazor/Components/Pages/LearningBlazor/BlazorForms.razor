@page "/blazor-forms"

<div class="col-12 offset-md-2 col-md-8 border mb-3">
    <div class="text-center pt-4">
        <h2 class="text-success">Product Form</h2>
        <hr />
    </div>
    <div class="mx-2 px-2">
        <EditForm FormName="ProductCreate" Model="Product" OnValidSubmit="HandleProductCreate">
            <DataAnnotationsValidator />
            @* <ValidationSummary/> *@
            <div class="form-floating py-2 mb-3">
                <InputText class="form-control" @bind-Value="@Product.Name" />
                <label for="@Product.Name">Product Name</label>
                <ValidationMessage For="@(() => Product.Name)" />
            </div>
            <div class="form-floating py-2 mb-3">
                <InputNumber class="form-control" @bind-Value="@Product.Price" />
                <label for="@Product.Price">Price</label>
                <ValidationMessage For="@(() => Product.Price)" />
            </div>
            <div class="form-floating py-2">
                <InputSelect class="form-select" @bind-Value="@Product.Category">
                    @foreach (var cat in Enum.GetValues(typeof(Category)))
                    {
                        <option value="@cat">@cat</option>
                    }
                </InputSelect>
                <label for="@Product.Category">Category</label>
            </div>
            <div class="form-group py-2">
                IsActive
                <InputCheckbox @bind-Value="@Product.IsActive" />
            </div>
            <div class="form-floating py-2">
                <InputDate class="form-control" @bind-Value="@Product.AvailableAfter" />
                <label for="@Product.AvailableAfter">Available After</label>
            </div>
            <button type="submit" class="btn btn-primary my-3">
                Create Product
            </button>
            <p class="text-success">@(IsProcessing == true ? "Processing..." : "")</p>
        </EditForm>

        @if (createdProduct is not null)
        {
            <div class="mx-2 pt-4">
                <hr />
                <h2 class="text-success ">Product Created</h2>
                <div class="px-4">
                    Name : @createdProduct.Name <br />
                    Price : @createdProduct.Price <br />
                    Category : @createdProduct.Category <br />
                    IsActive : @createdProduct.IsActive <br />
                    Available After : @createdProduct.AvailableAfter <br />
                </div>
            </div>
        }
    </div>
</div>


@code {
    [SupplyParameterFromForm(FormName = "ProductCreate")]
    public Product Product { get; set; } = new();
    private Product? createdProduct { get; set; }

    private bool IsProcessing = false;

    private async Task HandleProductCreate()
    {
        IsProcessing = true;
        createdProduct = null;
        await Task.Delay(3000);
        createdProduct = Product;
        Product = new();
        IsProcessing = false;
    }
}
