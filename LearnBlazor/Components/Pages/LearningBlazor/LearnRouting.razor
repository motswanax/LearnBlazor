@page "/learnRouting"
@page "/learnRouting/{Param1}"
@page "/learnRouting/{Param1}/{Param2}"
@page "/learnBlazor/learnRouting"
@page "/learnRouting/catch-all/{*PageParameters}"
@using Microsoft.AspNetCore.WebUtilities

@inject NavigationManager _NavigationManager

<h3>LearnRouting</h3>

<p>Param1: @Param1</p>  
<p>Param2: @Param2</p> 
<p>Page Parameters: @PageParameters</p> 

@* <a href="learnRouting?Param1=Learn&Param2=Blazor" class="btn btn-primary">Navigate to query parameter</a> *@
<button class="btn btn-primary" @onclick="NavigateToQueryParam">Navigate to query parameter</button> 
<button class="btn btn-success" @onclick="LoadParameters">Load Parameters</button> 
<br>

<div class="bg-info" style="height: 1000px;"></div>

<h2 id="targetElement">Main title</h2> 

@code {
    [Parameter]
    public string? Param1 { get; set; }

    [Parameter]
    public string? Param2 { get; set; } = string.Empty;

    [Parameter]
    public string? PageParameters { get; set; } = string.Empty;

    private void LoadParameters() 
    {
        var uri = new Uri(_NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);
        Param1 = query["Param1"];
        Param2 = query["Param2"];
        //_NavigationManager.Refresh(forceReload: true);
    }

    private void NavigateToQueryParam() 
    {
        _NavigationManager.NavigateTo("learnRouting?Param1=Learn&Param2=Blazor");
    }
}
